.dseg
DATA: .byte 1
.cseg

TWI_INIT: 

	ldi	r16, 100  // enligt peter. såg att micke skrev nåt om  255 här
	sts	TWBR, r16

	ldi	r16, (0<<TWINT) | (1<<TWEN)
	sts	TWCR,r16
	ret

TWI_SEND:

			ldi		r16,(1<<TWINT) | (1<<TWSTA) | (1<<TWEN)		// Send start
			sts		TWCR, r16 

			call W_WAIT2 // vill inte göra tx delen 			
		
LOAD_SLA_W:

			lsl		r20
			sts		TWDR, r20 //lds först
			call	TX

LOAD_DATA:
			lds		r16, DATA	// Load data till TWDR register. clear TWINT bit in TWCR för att påbörja överföring av data // kommmer nog behöva vara lds när det tas från sram 
			sts		TWDR, r16
			call	TX

W_STOP:
			ldi		r16, (1<<TWINT) | (1<<TWEN) | (1<<TWSTO)
			sts		TWCR, r16
			ret

TX:
			ldi		r16, (1<<TWINT) | (1<<TWEN)
			sts		TWCR, r16

W_WAIT2: //stega igenom
			lds		r24,TWCR	// WAIT for TWINT flag set, betyder att SLA+W har skickats och ACK/NACK har tagits emot
			sbrs	r24,TWINT
			rjmp	W_WAIT2
			ret
		

