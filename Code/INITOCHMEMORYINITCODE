
.dseg 

ROWS: .byte 24
INDEX: .byte 1
ROW_POS: .byte 1
ROWS_BACKUP: .byte 24 
ON_OFF: .byte 1 

.cseg 

MAIN: 

ldi r16, HIGH(RAMEND) 
out SPH, r16

ldi r16, LOW(RAMEND) 
out SPL, r16

rcall INIT
rcall MEMORYINIT

//Call SPI_MasterInit

jmp END

END: 

rjmp END

INIT: 

ldi r16, 0xB0 
out DDRB, r16 

ldi r16,(1<<SPE | 1<<MSTR | 0<<SPIE | 0<<SPR0)
out SPCR, r16

ldi r16, 0xff
out DDRA, r16

clr r16
out PORTA,r16

ret

MEMORYINIT: 

ldi r16, 0b11111110
sts INDEX, r16 

clr r16

sts ROW_POS, r16
sts ON_OFF, r16

CLR_MEMORY: 

clr r16 
clr r17 
rcall LOAD_ROWS 

CLR_LOOP: 

inc r17 
st X+, r16
cpi r17, 24
brne CLR_LOOP

CLR_MEMORY_BACKUP: 

clr r16 
clr r17 
rcall LOAD_ROWS_PROTECTED

CLR_LOOP_BACKUP: 

inc r17 
st Y+, r16 
cpi r17, 24 
brne CLR_LOOP_BACKUP

